{"ast":null,"code":"// axiosSetup.js\nimport axios from 'axios';\nimport { getAuth } from 'firebase/auth';\nconst auth = getAuth();\naxios.interceptors.request.use(async config => {\n  const currentUser = auth.currentUser;\n  if (currentUser) {\n    const token = await currentUser.getIdToken();\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"names":["axios","getAuth","auth","interceptors","request","use","config","currentUser","token","getIdToken","headers","error","Promise","reject"],"sources":["/workspaces/StudBuds/frontend/src/axiosSetup.js"],"sourcesContent":["// axiosSetup.js\nimport axios from 'axios';\nimport { getAuth } from 'firebase/auth';\n\nconst auth = getAuth();\n\naxios.interceptors.request.use(async (config) => {\n  const currentUser = auth.currentUser;\n  if (currentUser) {\n    const token = await currentUser.getIdToken();\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\nexport default axios;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,eAAe;AAEvC,MAAMC,IAAI,GAAGD,OAAO,CAAC,CAAC;AAEtBD,KAAK,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EAC/C,MAAMC,WAAW,GAAGL,IAAI,CAACK,WAAW;EACpC,IAAIA,WAAW,EAAE;IACf,MAAMC,KAAK,GAAG,MAAMD,WAAW,CAACE,UAAU,CAAC,CAAC;IAC5CH,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUF,KAAK,EAAE;EACrD;EACA,OAAOF,MAAM;AACf,CAAC,EAAGK,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAeX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}