{"ast":null,"code":"// Mapping of majors to cute animal emojis (keys in lowercase)\nconst cuteAnimalEmojiMap = {\n  \"electrical engineering\": \"üê≠\",\n  \"mechanical engineering\": \"üê±\",\n  \"civil engineering\": \"üê∂\",\n  \"chemical engineering\": \"üêπ\",\n  \"general engineering\": \"üêª\",\n  \"computer science\": \"ü¶ä\"\n};\n\n// Returns a cute animal emoji based on the user's major, normalizing the string.\nconst getEngineerEmoji = user => {\n  if (user.major) {\n    const normalizedMajor = user.major.trim().toLowerCase();\n    if (cuteAnimalEmojiMap[normalizedMajor]) {\n      return cuteAnimalEmojiMap[normalizedMajor];\n    }\n  }\n  return \"üê±\"; // default emoji if no match found\n};","map":{"version":3,"names":["cuteAnimalEmojiMap","getEngineerEmoji","user","major","normalizedMajor","trim","toLowerCase"],"sources":["/workspaces/StudBuds/frontend/src/components/MatchList.js"],"sourcesContent":["// Mapping of majors to cute animal emojis (keys in lowercase)\nconst cuteAnimalEmojiMap = {\n  \"electrical engineering\": \"üê≠\",\n  \"mechanical engineering\": \"üê±\",\n  \"civil engineering\": \"üê∂\",\n  \"chemical engineering\": \"üêπ\",\n  \"general engineering\": \"üêª\",\n  \"computer science\": \"ü¶ä\"\n};\n\n// Returns a cute animal emoji based on the user's major, normalizing the string.\nconst getEngineerEmoji = (user) => {\n  if (user.major) {\n    const normalizedMajor = user.major.trim().toLowerCase();\n    if (cuteAnimalEmojiMap[normalizedMajor]) {\n      return cuteAnimalEmojiMap[normalizedMajor];\n    }\n  }\n  return \"üê±\"; // default emoji if no match found\n};"],"mappings":"AAAA;AACA,MAAMA,kBAAkB,GAAG;EACzB,wBAAwB,EAAE,IAAI;EAC9B,wBAAwB,EAAE,IAAI;EAC9B,mBAAmB,EAAE,IAAI;EACzB,sBAAsB,EAAE,IAAI;EAC5B,qBAAqB,EAAE,IAAI;EAC3B,kBAAkB,EAAE;AACtB,CAAC;;AAED;AACA,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;EACjC,IAAIA,IAAI,CAACC,KAAK,EAAE;IACd,MAAMC,eAAe,GAAGF,IAAI,CAACC,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACvD,IAAIN,kBAAkB,CAACI,eAAe,CAAC,EAAE;MACvC,OAAOJ,kBAAkB,CAACI,eAAe,CAAC;IAC5C;EACF;EACA,OAAO,IAAI,CAAC,CAAC;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}